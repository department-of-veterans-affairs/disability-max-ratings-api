name: Build and Push to ECR

# 📝 **Description**: Builds Docker image of the disability-max-ratings-api and pushes to Amazon ECR
#
# 🚀 **Triggers**:
#    - Push to main branch
#    - Daily at midnight UTC (workaround for VA GitHub enterprise dependabot limitations)
#    - Manual workflow dispatch
#
# 🔧 **Steps**:
#    - 📥 Checkout source code
#    - 🔐 Configure AWS credentials using OIDC
#    - 🔓 Login to Amazon ECR
#    - ✅ Check if image already exists (prevents duplicate builds)
#    - 🐳 Build and push Docker image with commit SHA and 'latest' tags
#    - 📢 Notify on failure
#
# 📤 **Outputs**:
#    - Docker image pushed to ECR with tags: commit SHA and 'latest'
#
# ⚠️ **External Impact**:
#    - Modifies ECR repository by pushing new container images

on:
  workflow_dispatch: # Allow manual triggering
  push:
    branches:
      - main
  schedule:
    # Run every day at midnight UTC - this is a workaround to ensure the workflow is run at least once per day since
    # VA GitHub enterprise settings prevent github actions from running as a result of dependabot PRs.
    - cron: '0 0 * * *'

concurrency:
  group: build-and-push-${{ github.ref }}
  cancel-in-progress: true

permissions:
  id-token: write # This is required for requesting the JWT
  contents: write  # This is required for actions/checkout and pushing commits/tags

jobs:

  cz-bump:
    name: Bump version with Commitizen
    #needs: build-and-push-to-ecr
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # token with read/write repo access for abd-vro-machine
          token: ${{ secrets.ABD_VRO_MACHINE_READ_WRITE_REPO }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12.3'

      - name: Install Commitizen
        run: pip install commitizen

      - name: Bump version
        run: | # This step will bump the version based on the commit messages
          git config user.name "abd-vro-machine"
          git config user.email "${{ secrets.ABD_VRO_MACHINE_EMAIL }}"
          cz bump --yes

      - name: Push bump commit & tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: git push origin HEAD --follow-tags

  build-and-push-to-ecr:
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout source code"
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.GHA_OIDC_ROLE }}
          aws-region: us-gov-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: 'true'

      - name: Check if image already exists in ECR
        id: check-image
        run: |
          if aws ecr describe-images --repository-name ${{ secrets.ECR_REPOSITORY }} --image-ids imageTag=${{ github.sha }} >/dev/null 2>&1; then
            echo "Image with tag ${{ github.sha }} already exists in ECR."
            echo "::warning::Image already exists in ECR, stopping build workflow with error status to prevent release workflow from running."
            exit 1
          else
            echo "Image does not exist in ECR, proceeding with build"
          fi

      - name: Build Docker Image And Push to ECR
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:${{ github.sha }}
            ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:latest
          cache-from: type=registry,ref=${{ secrets.ECR_REPOSITORY }}
          cache-to: type=inline

      - name: Notify on Failure
        if: failure()
        run: |
          echo "Build or push failed"
