name: "Test, Lint & Coverage"

# 📝 **Description**: Comprehensive code quality pipeline with testing, linting, type checking, and security scanning
#
# 🚀 **Triggers**:
#    - Called by other workflows (workflow_call)
#    - Manual workflow dispatch
#
# 🔧 **Steps**:
#    - 📥 Checkout source code
#    - 🐍 Install Poetry (v2.0.0) and Python (v3.12.3) with caching
#    - 📦 Install project dependencies via Poetry
#    - 🎨 Run ruff code formatting
#    - 🔍 Run ruff linting checks
#    - 🔎 Run mypy type checking
#    - 🧪 Run pytest with coverage reporting
#    - 📊 Upload coverage results to Code Climate
#    - 🛡️ Run Bandit security scan (always executes even if other steps fail)
#
# 📤 **Outputs**:
#    - Test results and coverage reports
#    - Code quality validation results
#
# ⚠️ **External Impact**:
#    - Sends coverage data to Code Climate service

on:
  workflow_call: # Allows this workflow to be called from another workflow
  workflow_dispatch: # Allow manual triggering

permissions:
  contents: read
  secrets: read

jobs:
  perform-checks:
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout source code"
        uses: actions/checkout@v4

      - name: "Install Poetry"
        run: pipx install poetry==2.0.0

      - name: "Install Python"
        uses: actions/setup-python@v5
        with:
          python-version: "3.12.3"
          cache: "poetry"

      - name: "Install dependencies"
        run: poetry install

# TODO: Uncomment when dependabot uses poetry 2.x.x. See https://github.com/dependabot/dependabot-core/issues/11237
#      - name: "Validate dependencies against poetry.lock"
#        run: poetry check

      - name: "Run ruff format"
        run: poetry run ruff format

      - name: "Run ruff check"
        run: poetry run ruff check

      - name: "Run mypy"
        run: poetry run mypy .

      - name: "Run tests with coverage"
        run: poetry run pytest --cov=src --cov-report=xml --cov-report=term-missing

      - name: "Upload coverage to Code Climate"
        uses: paambaati/codeclimate-action@v9.0.0
        env:
          CC_TEST_REPORTER_ID: ${{secrets.CC_TEST_REPORTER_ID}}

      - name: "Bandit Code Scan"
        if: always()
        run: poetry run bandit -c pyproject.toml -r -l .
