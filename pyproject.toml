# pyproject.toml
[tool.pytest.ini_options]
addopts = "-ra --cov=./src --cov-fail-under=90 --no-cov-on-fail --cov-report=term:skip-covered --cov-report=html:build/reports/coverage --cov-branch"
testpaths = [
    "tests"
]

[tool.coverage.run]
# The following files are for development purposes and are not part of the coverage report
omit = [
    "src/python_src/pull_api_documentation.py",
]

[tool.ruff]
line-length = 127
target-version = "py312"
exclude = [".git", "__pycache__", "build", "dist"]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
]
ignore = []

[tool.ruff.format]
quote-style = "single"
line-ending = "lf"
indent-style = "space"
skip-magic-trailing-comma = false

[tool.mypy]
python_version = "3.12"
plugins = ['pydantic.mypy']
strict = true
ignore_missing_imports = true
exclude = [
    "scripts"
]

[tool.poetry]
name = "disability-max-ratings-api"
version = "0.1.0"
description = "API to get the maximum rating for a collection of disabilities."
authors = ["Department of Veterans Affairs"]
readme = "README.md"
license = "LICENSE.md"
homepage = "https://github.com/department-of-veterans-affairs/disability-max-ratings-api"
repository = "https://github.com/department-of-veterans-affairs/disability-max-ratings-api"
keywords = ["veterans", "disability", "ratings", "api", "fastapi"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
]

[tool.poetry.dependencies]
python = "3.12.3"
fastapi = "0.115.*"
httpx = "0.28.*"
uvicorn = {version = "0.34.*", extras = ["standard"]}

[tool.poetry.group.dev.dependencies]
mypy = "1.14.*"
pre-commit = "4.0.*"
ruff = "0.8.*"
pytest = "8.3.*"
pytest-cov = "6.0.*"
bandit = {version = "1.8.*", extras = ["toml"]}

[tool.bandit]
exclude_dirs = ["tests"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
